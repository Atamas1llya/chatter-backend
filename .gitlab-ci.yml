image: docker:latest

cache:
  key: "$CI_JOB_NAME"
  untracked: true

variables:
  NODE_ENV: staging

services:
  - docker:dind

stages:
  - build
  # - test
  - deploy


build:
  stage: build
  only:
   - master
  tags:
    - docker
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"

# test:
#   stage: test
#   only:
#     - master
#   services:
#     - mongo
#   variables:
#     NODE_ENV: staging
#   dependencies:
#     - build
#   script:
#     - npm run lint
#     - npm run test-staging


# docker-devops is a container with a key, ansible and docker installed
# for partscout.me only
deploy:
 stage: deploy
 only:
   - master
 tags:
   - docker
 image: registry.gitlab.com/partscout.me/docker/docker-devops
 script:
   - ssh -o StrictHostKeyChecking=no -i /opt/key ansible@api-staging.partscout.me sudo docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
   - ssh -o StrictHostKeyChecking=no -i /opt/key ansible@api-staging.partscout.me sudo docker-compose -f /opt/docker/docker-compose.yml pull ps-backend
   - ssh -o StrictHostKeyChecking=no -i /opt/key ansible@api-staging.partscout.me sudo docker-compose -f /opt/docker/docker-compose.yml stop ps-backend
   - ssh -o StrictHostKeyChecking=no -i /opt/key ansible@api-staging.partscout.me sudo docker-compose -f /opt/docker/docker-compose.yml up -d ps-backend
